---
# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

# on push for test but on merge in reality .

name: Java CI with Maven


on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


env:
  REGISTRY_NAME: petcliniccr
  CLUSTER_NAME: akcpetclinic
  CLUSTER_RESOURCE_GROUP: kubcluster
  NAMESPACE: petclinic-app


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    # Caching the Maven dependencies to speed up the workflow execution time
    - name: Cache Maven dependencies
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2 

    # Test
    - name: Test with Maven
      run: mvn test -B --file pom.xml 

    # Build
    - name: Build with Maven
      run: mvn package -P MySQL -B -DskipTests --file pom.xml 

    # Connect to ACR
    - name: Connect to ACR
      uses: azure/docker-login@v1
      with:
        login-server: ${{env.REGISTRY_NAME}}.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    # Build + Push docker image to ACR
    - run: |
        docker build . -t ${{env.REGISTRY_NAME}}.azurecr.io/petclinic-app:latest
        docker push ${{env.REGISTRY_NAME}}.azurecr.io/petclinic-app:latest

    # Select AKS cluster
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

      # Create namespace if doesn't exist
    - run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
    # Imagepullsecret for ACR
    - uses: Azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
        container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        secret-name: ${{ env.REGISTRY_NAME }}.azurecr.io-secret
        namespace: ${{ env.NAMESPACE }}
    # Deploy to AKS
    - uses: Azure/k8s-deploy@v1
      with:
        manifests: |
          petclinic-kub.yml
        images: |
           ${{ env.REGISTRY_NAME }}.azurecr.io/petclinic-app:latest
        imagepullsecrets: |
           ${{ env.REGISTRY_NAME }}.azurecr.io-secret
        namespace: ${{ env.NAMESPACE }}
